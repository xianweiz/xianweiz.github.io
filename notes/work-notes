GIT
* clone a remote git
$git clone ssh://<xxx>
$git checkout origin/<branch-x>
$git checkout -b <branch-x>

* pull down a remote branch
$git fetch origin <branch-x>
$git checkout <branch-x>

* push to remote for review
$git push origin HEAD:refs/for<branch-x>

* status
$git status -uno
$git ls-files --modified | xargs git add

* stash
$git stash
$git stash list
$git stash pop
$git stash apply "stash@{0}"
$git stash drop

* patch
$git log -n 1 -p > <xxx>.patch
$git apply <xxx>.patch
$git diff > <xxx>.diff
$patch -p1 < <xxx>.diff

* rename branch
$git branch -m <yyy>
$git branch -m <xxx> <yyy>

* log
$git log --graph --decorate --pretty

$git merge <branch-x>
$git reflog show <branch-y>
$git reset --keep "<branch-y>@{1}"

* list changes of a commit
$git show --name-only <commit>
$git diff <commit>^!

GPU
* AMD/NV terms
WG = TB/CTA, WF = Warp, WI = Thread, NDRange = Grid, CU = SM, 4 SIMDs/CU, 16lanes/SIMD, lane = SP(cuda core), SIMD_width = #lanes(or ALUs)/SIMD
* FLOPs
4 SIMDs/CU x 10 WFs/SIMD = 40 Active WFs/CU
64 WIs/WF x 40 Active WFs = 2560 Active WIs/CU
32 CUs x 4 SIMDs/CU x 16 Lanes/SIMD = 2040 Max FP ops/cycle

Each SIMD unit contains 16 stream cores, and each stream core houses five processing elements. Thus, each compute unit in the ATI Radeon HD 5870 has 80 (16 Ã— 5) processing elements.

* Install/Uninstall
$sudo apt-get install <cython>
$dpkg -l | grep <cython>
$sudo apt-get remove <cython>
$sudo apt-get autoremove
$sudo apt-get clean

$sudo apt-get install python-pip
$sudo pip install Cython=0.23.4
$sudo pip uninstall cython

$sudo pip uninstall cython
(pkg_resources.DistributionNotFound: The 'pip==20.0.2' distribution was not found and is required by the application)
$sudo easy_install pip
$sudo pip uninstall cython

$sudo ln -sf /usr/bin/python2.7 /usr/bin/python
python print array: print(*L, sep=', ')

Makefile print:
$(error   VAR is $(VAR))
$(warning VAR is $(VAR))
$(info    VAR is $(VAR)

shell python -V 2>/dev/null

+pycfg := python3-config
+ifneq (,$(findstring Python 3,$(shell python -V 2>/dev/null)))
+       pycfg = python-config
+endif

if sys.version_info.major < 3

public GPU docs:
https://llvm.org/docs/AMDGPUUsage.html
https://www.olcf.ornl.gov/wp-content/uploads/2019/10/ORNL_Application_Readiness_Workshop-AMD_GPU_Basics.pdf

## makefile with hierarchy
# specify each subdir here
SUBDIRS = test_cache test_bw

TARGETS = all clean

.PHONY: $(TARGETS) default

# change this line to change the default action
# (using one of the targets above)
default: all

define do-target
$(1): $$(foreach subdir, $$(SUBDIRS), $(1)-$$(subdir))

$(1)-%:
    $$(MAKE) -C $$* $(1)
endef

$(foreach tgt, $(TARGETS), $(eval $(call do-target,$(tgt))))

redirect stdout/stderr
$ ./run.sh >> log 2>&1

#-- show os info
$cat /etc/os-release
#-- enable root, and create a user
$sudo passwd root
$sudo useradd <xxx>
$sudo passwd <xxx>
$sudo usermod -aG sudo <xxx>

#-- ssh permission
$vim /etc/ssh/sshd_config
    AllowUsers <xxx>
$service ssh reload
 
 #-- gpu info
 $lspci | grep VGA
 
 https://askubuntu.com/questions/19486/how-do-i-add-a-kernel-boot-parameter
$sudo vim /etc/default/grub
 GRUB_CMDLINE_LINUX="amdgpu.ras_enable=0"
$sudo update-grub
<reboot> 




